=begin
#ORCID Member

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: Latest

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DevelopmentMemberAPIV30Api
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DevelopmentMemberAPIV30Api' do
  before do
    # run before each test
    @instance = SwaggerClient::DevelopmentMemberAPIV30Api.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DevelopmentMemberAPIV30Api' do
    it 'should create an instance of DevelopmentMemberAPIV30Api' do
      expect(@instance).to be_instance_of(SwaggerClient::DevelopmentMemberAPIV30Api)
    end
  end

  # unit tests for add_permission_notificationv3
  # Add a notification
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [NotificationPermissionV30] :body 
  # @return [String]
  describe 'add_permission_notificationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_addressv3
  # Add an address
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [AddressV30] :body 
  # @return [nil]
  describe 'create_addressv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_distinctionv3
  # Create an Distinction
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [DistinctionV30] :body 
  # @return [String]
  describe 'create_distinctionv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_educationv3
  # Create an Education
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [EducationV30] :body 
  # @return [String]
  describe 'create_educationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_employmentv3
  # Create an Employment
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [EmploymentV30] :body 
  # @return [String]
  describe 'create_employmentv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_external_identifierv3
  # Add external identifier
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [PersonExternalIdentifierV30] :body 
  # @return [nil]
  describe 'create_external_identifierv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_fundingv3
  # Create a Funding
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [FundingV30] :body 
  # @return [String]
  describe 'create_fundingv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_group_id_recordv3
  # Create a Group
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [GroupIdRecord] :body 
  # @return [nil]
  describe 'create_group_id_recordv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_invited_positionv3
  # Create an InvitedPosition
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [InvitedPositionV30] :body 
  # @return [String]
  describe 'create_invited_positionv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_keywordv3
  # Add keyword
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [KeywordV30] :body 
  # @return [nil]
  describe 'create_keywordv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_membershipv3
  # Create an Membership
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [MembershipV30] :body 
  # @return [String]
  describe 'create_membershipv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_other_namev3
  # Add other name
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [OtherNameV30] :body 
  # @return [nil]
  describe 'create_other_namev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_peer_reviewv3
  # Create a Peer Review
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [PeerReviewV30] :body 
  # @return [String]
  describe 'create_peer_reviewv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_qualificationv3
  # Create an Qualification
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [QualificationV30] :body 
  # @return [String]
  describe 'create_qualificationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_research_resourcev3
  # Create a Research Resource
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [ResearchResourceV30] :body 
  # @return [String]
  describe 'create_research_resourcev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_researcher_urlv3
  # Add a new researcher url for an ORCID ID
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [ResearcherUrlV30] :body 
  # @return [nil]
  describe 'create_researcher_urlv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_servicev3
  # Create an Service
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [ServiceV30] :body 
  # @return [String]
  describe 'create_servicev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_worksv3
  # Create a list of Works
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [WorkBulkV30] :body 
  # @return [String]
  describe 'create_worksv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_workv3
  # Create a Work
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @option opts [WorkV30] :body 
  # @return [String]
  describe 'create_workv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_addressv3
  # Delete an address
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_addressv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_distinctionv3
  # Delete an Distinction
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_distinctionv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_educationv3
  # Delete an Education
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_educationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_employmentv3
  # Delete an Employment
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_employmentv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_external_identifierv3
  # Delete external identifier
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_external_identifierv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_fundingv3
  # Delete a Funding
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_fundingv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_group_id_recordv3
  # Delete a Group
  # 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_group_id_recordv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_invited_positionv3
  # Delete an InvitedPosition
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_invited_positionv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_keywordv3
  # Delete keyword
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_keywordv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_membershipv3
  # Delete an Membership
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_membershipv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_other_namev3
  # Delete other name
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_other_namev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_peer_reviewv3
  # Delete a Peer Review
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_peer_reviewv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_qualificationv3
  # Delete an Qualification
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_qualificationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_research_resourcev3
  # Delete an Research Resource
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_research_resourcev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_researcher_urlv3
  # Delete one researcher url from an ORCID ID
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_researcher_urlv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_servicev3
  # Delete an Service
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_servicev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_workv3
  # Delete a Work
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_workv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_addressv3
  # Edit an address
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [AddressV30] :body 
  # @return [nil]
  describe 'edit_addressv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_external_identifierv3
  # Edit external identifier
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [PersonExternalIdentifierV30] :body 
  # @return [nil]
  describe 'edit_external_identifierv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_keywordv3
  # Edit keyword
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [KeywordV30] :body 
  # @return [nil]
  describe 'edit_keywordv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_other_namev3
  # Edit other name
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [OtherNameV30] :body 
  # @return [nil]
  describe 'edit_other_namev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_researcher_urlv3
  # Edits researcher url for an ORCID ID
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [ResearcherUrlV30] :body 
  # @return [nil]
  describe 'edit_researcher_urlv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for flag_as_archived_permission_notificationv3
  # Archive a notification
  # 
  # @param orcid 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'flag_as_archived_permission_notificationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_by_queryv3
  # Search records
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q 
  # @return [SearchV30]
  describe 'search_by_queryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_by_queryv3_0
  # Search records
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q 
  # @return [nil]
  describe 'search_by_queryv3_0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_by_queryv3_1
  # Search records
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :q 
  # @return [nil]
  describe 'search_by_queryv3_1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_distinctionv3
  # Update an Distinction
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [DistinctionV30] :body 
  # @return [nil]
  describe 'update_distinctionv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_educationv3
  # Update an Education
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [EducationV30] :body 
  # @return [nil]
  describe 'update_educationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_employmentv3
  # Update an Employment
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [EmploymentV30] :body 
  # @return [nil]
  describe 'update_employmentv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_fundingv3
  # Update a Funding
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [FundingV30] :body 
  # @return [nil]
  describe 'update_fundingv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_group_id_recordv3
  # Update a Group
  # 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [GroupIdRecord] :body 
  # @return [nil]
  describe 'update_group_id_recordv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_invited_positionv3
  # Update an InvitedPosition
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [InvitedPositionV30] :body 
  # @return [nil]
  describe 'update_invited_positionv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_membershipv3
  # Update an Membership
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [MembershipV30] :body 
  # @return [nil]
  describe 'update_membershipv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_peer_reviewv3
  # Update a Peer Review
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [PeerReviewV30] :body 
  # @return [nil]
  describe 'update_peer_reviewv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_qualificationv3
  # Update an Qualification
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [QualificationV30] :body 
  # @return [nil]
  describe 'update_qualificationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_research_resourcev3
  # Update a Research Resource
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [ResearchResourceV30] :body 
  # @return [nil]
  describe 'update_research_resourcev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_servicev3
  # Update an Service
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [ServiceV30] :body 
  # @return [nil]
  describe 'update_servicev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_workv3
  # Update a Work
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @option opts [WorkV30] :body 
  # @return [nil]
  describe 'update_workv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_activitiesv3
  # Fetch all activities
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [ActivitiesSummaryV30]
  describe 'view_activitiesv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_addressesv3
  # Fetch all addresses of a profile
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [AddressesV30]
  describe 'view_addressesv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_addressv3
  # Fetch an address
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_addressv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_biographyv3
  # Get biography details
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [BiographyV30]
  describe 'view_biographyv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_clientv3
  # Fetch client details
  # 
  # @param client_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_clientv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_distinction_summaryv3
  # Fetch an Distinction summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [DistinctionSummaryV30]
  describe 'view_distinction_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_distinctionsv3
  # Fetch all distinctions
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [DistinctionsSummaryV30]
  describe 'view_distinctionsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_distinctionv3
  # Fetch an Distinction
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [DistinctionV30]
  describe 'view_distinctionv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_education_summaryv3
  # Fetch an Education summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [EducationSummaryV30]
  describe 'view_education_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_educationsv3
  # Fetch all educations
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [EducationsSummaryV30]
  describe 'view_educationsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_educationv3
  # Fetch an Education
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [EducationV30]
  describe 'view_educationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_emailsv3
  # Fetch all emails for an ORCID ID
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_emailsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_employment_summaryv3
  # Fetch an Employment Summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [EmploymentSummaryV30]
  describe 'view_employment_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_employmentsv3
  # Fetch all employments
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [EmploymentsSummaryV30]
  describe 'view_employmentsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_employmentv3
  # Fetch an Employment
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [EmploymentV30]
  describe 'view_employmentv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_external_identifiersv3
  # Fetch external identifiers
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_external_identifiersv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_external_identifierv3
  # Fetch external identifier
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_external_identifierv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_funding_summaryv3
  # Fetch a Funding Summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [FundingSummaryV30]
  describe 'view_funding_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_fundingsv3
  # Fetch all fundings
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [FundingsV30]
  describe 'view_fundingsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_fundingv3
  # Fetch a Funding
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [FundingV30]
  describe 'view_fundingv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_group_id_recordsv3
  # Fetch Groups
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :page_size 
  # @option opts [String] :page 
  # @option opts [String] :name 
  # @option opts [String] :group_id 
  # @return [GroupIdRecords]
  describe 'view_group_id_recordsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_group_id_recordv3
  # Fetch a Group
  # 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [GroupIdRecord]
  describe 'view_group_id_recordv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_invited_position_summaryv3
  # Fetch an InvitedPosition summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [InvitedPositionSummaryV30]
  describe 'view_invited_position_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_invited_positionsv3
  # Fetch all invitedPositions
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [InvitedPositionsV30]
  describe 'view_invited_positionsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_invited_positionv3
  # Fetch an InvitedPosition
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [InvitedPositionV30]
  describe 'view_invited_positionv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_keywordsv3
  # Fetch keywords
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_keywordsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_keywordv3
  # Fetch keyword
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_keywordv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_membership_summaryv3
  # Fetch an Membership summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [MembershipSummaryV30]
  describe 'view_membership_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_membershipsv3
  # Fetch all memberships
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [MembershipsV30]
  describe 'view_membershipsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_membershipv3
  # Fetch an Membership
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [MembershipV30]
  describe 'view_membershipv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_other_namesv3
  # Fetch Other names
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_other_namesv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_other_namev3
  # Fetch Other name
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_other_namev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_peer_review_summaryv3
  # Fetch a Peer Review Summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [PeerReviewSummaryV30]
  describe 'view_peer_review_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_peer_reviewsv3
  # Fetch all peer reviews
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [PeerReviewsV30]
  describe 'view_peer_reviewsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_peer_reviewv3
  # Fetch a Peer Review
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [PeerReviewV30]
  describe 'view_peer_reviewv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_permission_notificationv3
  # Fetch a notification by id
  # 
  # @param orcid 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'view_permission_notificationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_personal_detailsv3
  # Fetch personal details for an ORCID ID
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [PersonalDetailsV30]
  describe 'view_personal_detailsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_personv3
  # Fetch person details
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_personv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_qualification_summaryv3
  # Fetch an Qualification summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [QualificationSummaryV30]
  describe 'view_qualification_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_qualificationsv3
  # Fetch all qualifications
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [QualificationsV30]
  describe 'view_qualificationsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_qualificationv3
  # Fetch an Qualification
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [QualificationV30]
  describe 'view_qualificationv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_recordv3
  # Fetch record details
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [RecordV30]
  describe 'view_recordv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_research_resource_summaryv3
  # Fetch a Research Resource summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [ResearchResourceSummaryV30]
  describe 'view_research_resource_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_research_resourcesv3
  # Fetch all Research Resources
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [ResearchResourcesV30]
  describe 'view_research_resourcesv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_research_resourcev3
  # Fetch a Research Resource
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [ResearchResourceV30]
  describe 'view_research_resourcev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_researcher_urlsv3
  # Fetch all researcher urls for an ORCID ID
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_researcher_urlsv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_researcher_urlv3
  # Fetch one researcher url for an ORCID ID
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_researcher_urlv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_service_summaryv3
  # Fetch an Service summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [ServiceSummaryV30]
  describe 'view_service_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_servicesv3
  # Fetch all services
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [ServicesV30]
  describe 'view_servicesv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_servicev3
  # Fetch an Service
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [ServiceV30]
  describe 'view_servicev3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_specified_worksv3
  # Fetch specified works
  # 
  # @param orcid 
  # @param put_codes 
  # @param [Hash] opts the optional parameters
  # @return [WorkBulkV30]
  describe 'view_specified_worksv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_status_json
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'view_status_json test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_work_summaryv3
  # Fetch a Work Summary
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [WorkSummaryV30]
  describe 'view_work_summaryv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_worksv3
  # Fetch all works
  # 
  # @param orcid 
  # @param [Hash] opts the optional parameters
  # @return [WorksSummaryV30]
  describe 'view_worksv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for view_workv3
  # Fetch a Work
  # 
  # @param orcid 
  # @param put_code 
  # @param [Hash] opts the optional parameters
  # @return [WorkV30]
  describe 'view_workv3 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
